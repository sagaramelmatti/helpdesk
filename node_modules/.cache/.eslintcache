[{"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/index.js":"1","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/App.js":"2","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/Topmenu.js":"3","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/user/UserList.js":"4","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/user/AddUser.js":"5","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/user/EditUser.js":"6","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/department/DepartmentList.js":"7","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/department/AddDepartment.js":"8","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/department/EditDepartment.js":"9","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/complaint/ComplaintList.js":"10","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/complaint/AddComplaint.js":"11","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/admin/complaint/AdminComplaintList.js":"12","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/services/UserDataService.js":"13","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/services/ComplaintDataService.js":"14","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/services/DepartmentDataService.js":"15","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/http-common.js":"16","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/context/AuthProvider.js":"17","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/common/StoreLocalData.js":"18","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/constants/index.js":"19","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/constants/FormConstants.js":"20","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/constants/ApiPathConstants.js":"21","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/constants/RouteConstants.js":"22","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/authentication/Login.js":"23","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/authentication/ProtectedRoutes.js":"24","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/api/index.js":"25","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/api/AuthApi.js":"26","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/axiosInstance.js":"27","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/authentication/useLogOut.js":"28","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/api/CommonApi.js":"29","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/common/PageLoader.js":"30","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/common/Toaster.js":"31","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/common/Profile.js":"32","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/common/PageNotFound.js":"33","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/complaint/EditComplaint.js":"34","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/location/LocationList.js":"35","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/location/AddLocation.js":"36","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/location/EditLocation.js":"37","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/services/LocationDataService.js":"38","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/report/ComplaintReport.js":"39"},{"size":234,"mtime":1680345514508,"results":"40","hashOfConfig":"41"},{"size":4133,"mtime":1683128168651,"results":"42","hashOfConfig":"41"},{"size":2020,"mtime":1681020842888,"results":"43","hashOfConfig":"41"},{"size":13351,"mtime":1681581177061,"results":"44","hashOfConfig":"41"},{"size":4483,"mtime":1683224677231,"results":"45","hashOfConfig":"41"},{"size":5560,"mtime":1683223995730,"results":"46","hashOfConfig":"41"},{"size":4100,"mtime":1680345514508,"results":"47","hashOfConfig":"41"},{"size":4516,"mtime":1683223371861,"results":"48","hashOfConfig":"41"},{"size":4371,"mtime":1683224719586,"results":"49","hashOfConfig":"41"},{"size":4218,"mtime":1681571635456,"results":"50","hashOfConfig":"41"},{"size":5975,"mtime":1683223200890,"results":"51","hashOfConfig":"41"},{"size":14427,"mtime":1683224662756,"results":"52","hashOfConfig":"41"},{"size":497,"mtime":1681020842892,"results":"53","hashOfConfig":"54"},{"size":573,"mtime":1680345514508,"results":"55","hashOfConfig":"54"},{"size":601,"mtime":1680345514508,"results":"56","hashOfConfig":"41"},{"size":154,"mtime":1680345514508,"results":"57","hashOfConfig":"41"},{"size":520,"mtime":1679938554758,"results":"58","hashOfConfig":"41"},{"size":685,"mtime":1681022670549,"results":"59","hashOfConfig":"41"},{"size":103,"mtime":1679819153217,"results":"60","hashOfConfig":"41"},{"size":4116,"mtime":1683223019092,"results":"61","hashOfConfig":"41"},{"size":785,"mtime":1683128168651,"results":"62","hashOfConfig":"41"},{"size":406,"mtime":1683128168651,"results":"63","hashOfConfig":"41"},{"size":8700,"mtime":1683128168651,"results":"64","hashOfConfig":"41"},{"size":463,"mtime":1679940897873,"results":"65","hashOfConfig":"41"},{"size":56,"mtime":1681020842888,"results":"66","hashOfConfig":"41"},{"size":804,"mtime":1681020842888,"results":"67","hashOfConfig":"41"},{"size":803,"mtime":1679939310350,"results":"68","hashOfConfig":"41"},{"size":366,"mtime":1679938406584,"results":"69","hashOfConfig":"41"},{"size":3869,"mtime":1683128168651,"results":"70","hashOfConfig":"41"},{"size":2254,"mtime":1680362075361,"results":"71","hashOfConfig":"41"},{"size":296,"mtime":1680371212952,"results":"72","hashOfConfig":"41"},{"size":1594,"mtime":1681020842888,"results":"73","hashOfConfig":"41"},{"size":1015,"mtime":1681020842888,"results":"74","hashOfConfig":"41"},{"size":6795,"mtime":1683224359304,"results":"75","hashOfConfig":"41"},{"size":4398,"mtime":1681555577979,"results":"76","hashOfConfig":"41"},{"size":3862,"mtime":1683224693543,"results":"77","hashOfConfig":"41"},{"size":4160,"mtime":1681555577979,"results":"78","hashOfConfig":"41"},{"size":589,"mtime":1681555577979,"results":"79","hashOfConfig":"41"},{"size":5139,"mtime":1683457808431,"results":"80","hashOfConfig":"41"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1s06de4",{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18op1sn",{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"84"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"84"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"84"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/index.js",[],[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/App.js",["215","216"],[],"import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport {\n  PATH_LOGIN,\n  PATH_PROFILE,\n  PATH_PAGE_NOT_FOUND,\n  // PATH_ROOT,\n  // ADD_CUSTOMER,\n  // CUSTOMERS,\n  // CUSTOMERS_ID,\n  // ADD_PRODUCT,\n  // PRODUCTS,\n  // ADD_INVOICE,\n  // INVOICES,\n  // INVOIC_ID,\n  // CATEGORY,\n  // ADD_CATEGORY,\n} from \"./component/constants\";\n\nimport AddUser from \"./component/user/AddUser\";\nimport UserList from \"./component/user/UserList\";\nimport EditUser from \"./component/user/EditUser\";\nimport DepartmentList from \"./component/department/DepartmentList\";\nimport AddDepartment from \"./component/department/AddDepartment\";\nimport EditDepartment from \"./component/department/EditDepartment\";\nimport ComplaintList from \"./component/complaint/ComplaintList\";\nimport AddComplaint from \"./component/complaint/AddComplaint\";\nimport EditComplaint from \"./component/complaint/EditComplaint\";\nimport AdminComplaintList from \"./component/admin/complaint/AdminComplaintList\";\nimport LocationList from \"./component/location/LocationList\";\nimport AddLocation from \"./component/location/AddLocation\";\nimport EditLocation from \"./component/location/EditLocation\";\nimport ComplaintReport from \"./component/report/ComplaintReport\";\nimport { Login } from \"./component/authentication/Login\";\nimport ProtectedRoutes from \"./component/authentication/ProtectedRoutes\";\nimport { AuthProvider } from \"./context/AuthProvider\";\nimport Toaster from \"./component/common/Toaster\";\nimport Profile from \"./component/common/Profile\";\nimport PageNotFound from \"./component/common/PageNotFound\";\n\nfunction App() {\n  const role = localStorage.getItem(\"role\");\n\n  function ShowRoleWiseComponent({ children }) {\n    if (role === \"ROLE_ADMIN\") {\n      return <>{children}</>;\n    } else {\n      return <PageNotFound />;\n    }\n  }\n\n  function UserComponent({ children }) {\n    if (role === \"ROLE_USER\") {\n      return <>{(\"user\", children)}</>;\n    } else {\n      return <PageNotFound />;\n    }\n  }\n\n  return (\n    <>\n      <body className=\"hold-transition skin-blue layout-top-nav\">\n        <div className=\"wrapper\">\n          <Toaster />\n          <Router>\n            <AuthProvider>\n              <Routes>\n                <Route path={PATH_LOGIN} element={<Login />} />\n                <Route path={PATH_PAGE_NOT_FOUND} element={<PageNotFound />} />\n                <Route element={<ProtectedRoutes />}>\n                  <Route path=\"/\" exact element={<UserList />} />\n                  <Route path=\"/addUser\" exact element={<AddUser />} />\n                  <Route path=\"/users\" element={<UserList />} />\n                  <Route path=\"/users/:id\" element={<EditUser />} />\n                  <Route\n                    path=\"/addComplaint\"\n                    exact\n                    element={<AddComplaint />}\n                  />\n                  <Route\n                    path=\"/editComplaint/:id\"\n                    exact\n                    element={<EditComplaint />}\n                  />\n                  <Route path=\"/departments\" element={<DepartmentList />} />\n                  <Route path=\"/departments/:id\" element={<EditDepartment />} />\n                  <Route\n                    path=\"/addDepartment\"\n                    exact\n                    element={<AddDepartment />}\n                  />\n                  <Route path=\"/locations\" element={<LocationList />} />\n                  <Route path=\"/locations/:id\" element={<EditLocation />} />\n                  <Route\n                    path=\"/addLocation\"\n                    exact\n                    element={<AddLocation />}\n                  />\n                  <Route\n                    path=\"/adminComplaints\"\n                    element={<AdminComplaintList />}\n                  />\n                  <Route path=\"/complaints\" element={<ComplaintList />} />\n                  <Route path=\"/reports\" element={<ComplaintReport />} />\n                  <Route path={PATH_PROFILE} element={<Profile />} />\n                </Route>\n              </Routes>\n            </AuthProvider>\n          </Router>\n        </div>\n      </body>\n    </>\n  );\n}\n\nexport default App;\n","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/Topmenu.js",["217"],[],"import React from \"react\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport useLogout from \"./authentication/useLogOut\";\r\nimport { PATH_LOGIN } from \"./constants\";\r\n\r\nimport { navigationConstants } from \"./constants\";\r\nimport { removeUserLocalStorageData } from \"../component/common/StoreLocalData\";\r\n\r\nfunction Topmenu(props) {\r\n  const role = localStorage.getItem(\"role\");\r\n\r\n  const logout = useLogout();\r\n\r\n  const signOut = async () => {\r\n    await logout();\r\n    removeUserLocalStorageData();\r\n    Navigate(PATH_LOGIN, { replace: true });\r\n  };\r\n\r\n  const renderNavBar = () => {\r\n    return navigationConstants?.map((item) =>\r\n      item?.rolesList?.includes(role) ? (\r\n        <li key={role.label}>\r\n          <Link\r\n            to={item?.path}\r\n            onClick={() => (item?.key === \"log_out\" ? signOut() : null)}\r\n          >\r\n            <i className={`fa ${item?.iconName}`}></i> {item?.label}\r\n          </Link>\r\n        </li>\r\n      ) : (\r\n        \"\"\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <header className=\"main-header\">\r\n          <nav className=\"navbar navbar-static-top\">\r\n            <div className=\"container\">\r\n              <div className=\"navbar-header\">\r\n                <a href=\"#\" className=\"navbar-brand\">\r\n                  <b>Ledzer</b>\r\n                </a>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"navbar-toggle collapsed\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#navbar-collapse\"\r\n                >\r\n                  <i className=\"fa fa-bars\"></i>\r\n                </button>\r\n              </div>\r\n              <div\r\n                className=\"collapse navbar-collapse pull-left\"\r\n                id=\"navbar-collapse\"\r\n              >\r\n                <ul className=\"nav navbar-nav\">{renderNavBar()}</ul>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n        </header>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Topmenu;\r\n","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/user/UserList.js",["218","219","220","221","222"],[],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport Select from \"react-select\";\r\n\r\nimport {\r\n  sendUserComplaint,\r\n  getLocationList,\r\n  getDepartmentList,\r\n  getUsers,\r\n} from \"../../api/CommonApi\";\r\nimport PageLoader from \"../common/PageLoader\";\r\nimport { filterFormFields, userStatusList } from \"../constants\";\r\n\r\nconst page = \"user_list\";\r\n\r\nfunction UserList(props) {\r\n  const [users, setUsers] = useState([]);\r\n  const [complaints, setComplaints] = useState([]);\r\n  const [complaintId, setComplaintId] = useState(\"\");\r\n  const [commentMessage, setCommentMessage] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [locationList, setLocationList] = useState({});\r\n  const [departmentList, setDepartmentList] = useState({});\r\n  const [userOptionList, setUserOptionList] = useState({});\r\n  const [filterParams, setFilterParams] = useState({});\r\n\r\n  useEffect(() => {\r\n    getUsersData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getLocationList().then((response) => {\r\n      if (response?.status === 200) {\r\n        const locationListTemp = response?.data?.map((item) => {\r\n          return { value: item?.id, label: item?.name };\r\n        });\r\n        setLocationList(locationListTemp);\r\n      }\r\n    });\r\n\r\n    getDepartmentList().then((response) => {\r\n      if (response?.status === 200) {\r\n        const departmentListTemp = response?.data?.map((item) => {\r\n          return { value: item?.id, label: item?.name };\r\n        });\r\n        setDepartmentList(departmentListTemp);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // get users\r\n  const getUsersData = (filterParamsFields) => {\r\n    setIsLoading(true);\r\n    getUsers(filterParamsFields).then((response) => {\r\n      setIsLoading(false);\r\n      if (response.status === 200) {\r\n        const userListTemp = response?.data?.map((item) => {\r\n          return { value: item?.id, label: item?.name };\r\n        });\r\n        setUserOptionList(userListTemp);\r\n        setUsers(response?.data);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onDelete = (id) => {\r\n    axios.delete(`http://localhost:8080/api/admin/users/${id}`).then(() => {\r\n      getUsersData();\r\n    });\r\n  };\r\n\r\n  const setData = (data) => {\r\n    let { id, username, name, email, departmentId, status } = data;\r\n    localStorage.setItem(\"id\", id);\r\n    localStorage.setItem(\"username\", username);\r\n    localStorage.setItem(\"name\", name);\r\n    localStorage.setItem(\"email\", email);\r\n    localStorage.setItem(\"departmentId\", departmentId);\r\n    localStorage.setItem(\"status\", status);\r\n  };\r\n\r\n  const sendComplaints = (statusParam) => {\r\n    const complaintChangeData = {\r\n      status: statusParam,\r\n      // comment: commentMessage,\r\n    };\r\n\r\n    sendUserComplaint(complaintChangeData, complaintId).then((response) => {\r\n      if (response?.status === 200) {\r\n        toast.success(\"Status Updated\");\r\n        setIsLoading(false);\r\n        getUsersData();\r\n      }\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  const showOptionsList = (formFieldKey) => {\r\n    switch (formFieldKey) {\r\n      case \"departmentId\":\r\n        return departmentList;\r\n      case \"userId\":\r\n        return userOptionList;\r\n      case \"locationId\":\r\n        return locationList;\r\n      case \"statusId\":\r\n        return userStatusList;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const findSelectedValue = (keyParam) => {\r\n    const listName = showOptionsList(keyParam);\r\n    if (listName?.length && filterParams?.[keyParam]) {\r\n      const selectedList = listName?.find(\r\n        (item) => item?.value === filterParams?.[keyParam]\r\n      );\r\n      return selectedList;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content-header\">\r\n          <h1>Add New User</h1>\r\n        </section>\r\n        <section className=\"content\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xs-12\">\r\n              <div className=\"box\">\r\n                <div className=\"box-header\">\r\n                  <h3 className=\"box-title\"> User List</h3>\r\n                </div>\r\n                <div className=\"box-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-xs-4\">\r\n                      <br />\r\n                      <a href=\"addUser\">\r\n                        <button className=\"btn btn-success\">\r\n                          <i className=\"glyphicon glyphicon-plus\"></i> Add User\r\n                        </button>\r\n                      </a>\r\n                      <button\r\n                        className=\"btn btn-default\"\r\n                        onClick=\"reload_table()\"\r\n                      >\r\n                        <i className=\"glyphicon glyphicon-refresh\"></i> Reload\r\n                      </button>\r\n                    </div>\r\n                    {filterFormFields?.map((formField) => {\r\n                      if (formField?.pageName?.includes(page))\r\n                        return (\r\n                          <div className=\"col-xs-2\">\r\n                            <label className=\"control-label\">\r\n                              {formField?.label}\r\n                            </label>\r\n                            <Select\r\n                              onChange={(e) =>\r\n                                setFilterParams({\r\n                                  ...filterParams,\r\n                                  [formField.key]: e.value,\r\n                                })\r\n                              }\r\n                              options={showOptionsList(formField?.key)}\r\n                              value={findSelectedValue(formField?.key)}\r\n                            />\r\n                          </div>\r\n                        );\r\n                    })}\r\n                    <div className=\"col-xs-2\">\r\n                      <br />\r\n                      <label className=\"control-label\"></label>\r\n                      <button\r\n                        className=\"btn btn-success\"\r\n                        onClick={() => {\r\n                          getUsersData(filterParams);\r\n                        }}\r\n                      >\r\n                        <i className=\"glyphicon glyphicon-search\"></i> Search\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-default\"\r\n                        onClick={() => {\r\n                          setFilterParams({});\r\n                          getUsersData(null);\r\n                        }}\r\n                      >\r\n                        <i className=\"glyphicon glyphicon-refresh\"></i> Clear\r\n                        Search\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <br />\r\n                  <br />\r\n\r\n                  <div id=\"myModal\" className=\"modal fade\">\r\n                    <div className=\"modal-dialog\">\r\n                      <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                          <h5 className=\"modal-title\">Your Feedback</h5>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"close\"\r\n                            data-dismiss=\"modal\"\r\n                            onClick={() => {\r\n                              setComplaintId(\"\");\r\n                            }}\r\n                          >\r\n                            &times;\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                          <form>\r\n                            <div className=\"form-group\">\r\n                              <label for=\"inputComment\">Comments</label>\r\n                              <textarea\r\n                                className=\"form-control\"\r\n                                id=\"inputComment\"\r\n                                rows=\"2\"\r\n                                value={commentMessage}\r\n                                onChange={(e) =>\r\n                                  setCommentMessage(e.target.value)\r\n                                }\r\n                              ></textarea>\r\n                            </div>\r\n                          </form>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                          <button\r\n                            type=\"button\"\r\n                            data-dismiss=\"modal\"\r\n                            className=\"btn btn-success\"\r\n                            onClick={() => {\r\n                              setComplaintId(\"\");\r\n                              sendComplaints(\"A\");\r\n                              setCommentMessage(\"\");\r\n                            }}\r\n                          >\r\n                            Approve\r\n                          </button>\r\n                          <button\r\n                            type=\"button\"\r\n                            data-dismiss=\"modal\"\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {\r\n                              setComplaintId(\"\");\r\n                              sendComplaints(\"D\");\r\n                              setCommentMessage(\"\");\r\n                            }}\r\n                          >\r\n                            Deny\r\n                          </button>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-default\"\r\n                            data-dismiss=\"modal\"\r\n                            onClick={() => {\r\n                              setComplaintId(\"\");\r\n                              setCommentMessage(\"\");\r\n                            }}\r\n                          >\r\n                            Cancel\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {isLoading ? (\r\n                    <PageLoader />\r\n                  ) : (\r\n                    <table\r\n                      id=\"table\"\r\n                      className=\"table table-bordered table-hover\"\r\n                    >\r\n                      <thead>\r\n                        <tr>\r\n                          <th width=\"10%\">Sr. No </th>\r\n                          <th width=\"20%\">Name</th>\r\n                          <th width=\"20%\">Email</th>\r\n                          <th width=\"20%\">Department</th>\r\n                          <th width=\"20%\">Location</th>\r\n                          <th width=\"10%\">Status</th>\r\n                          <th width=\"10%\"></th>\r\n                          <th width=\"10%\">Status</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {users?.length ? (\r\n                          users.map((user) => (\r\n                            <tr key={user?.id}>\r\n                              <td> {user?.id} </td>\r\n                              <td>{user?.name}</td>\r\n                              <td>{user?.email}</td>\r\n                              <td>{user?.department?.name}</td>\r\n                              <td>{user?.location?.name}</td>\r\n                              <td>\r\n                                {user?.status === \"A\" ? \"Active\" : \"Denied\"}\r\n                              </td>\r\n                              <td>\r\n                                <Link to={\"/users/\" + user?.id} title={\"Edit\"}>\r\n                                  {\" \"}\r\n                                  Edit{\" \"}\r\n                                </Link>\r\n                              </td>\r\n                              <td>\r\n                                <button\r\n                                  href=\"#myModal\"\r\n                                  class=\"btn btn-primary\"\r\n                                  data-toggle=\"modal\"\r\n                                  onClick={() => {\r\n                                    setComplaintId(user?.id);\r\n                                  }}\r\n                                >\r\n                                  <i className=\"fa fa-pencil\"></i> Change{\" \"}\r\n                                </button>\r\n                              </td>\r\n                              <td>\r\n                                <button\r\n                                  className=\"btn btn-danger\"\r\n                                  onClick={() => onDelete(user?.id)}\r\n                                >\r\n                                  <i className=\"fa fa-trash-o\"></i> Delete{\" \"}\r\n                                </button>\r\n                              </td>\r\n                            </tr>\r\n                          ))\r\n                        ) : (\r\n                          <tr>\r\n                            <td colspan=\"10\" className=\"text-center\">\r\n                              <h3>No records found</h3>\r\n                            </td>\r\n                          </tr>\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserList;\r\n","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/user/AddUser.js",[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/user/EditUser.js",["223"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  getDepartmentList,\r\n  getLocationList,\r\n  getUsers,\r\n  updateUser,\r\n} from \"../../api\";\r\nimport { addUserFormConstants } from \"../constants\";\r\nimport Select from \"react-select\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction EditUser(props) {\r\n  const [userData, setUserData] = useState({\r\n    id: null,\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    departmentId: \"\",\r\n    locationId: \"\",\r\n    status: \"\",\r\n  });\r\n\r\n  const [departmentList, setDepartmentList] = useState({});\r\n  const [locationList, setLocationList] = useState({});\r\n\r\n  const params = useParams();\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    getUsers().then((res) => {\r\n      const currentUser = res?.data?.find(\r\n        (user) => user?.id === Number(params?.id)\r\n      );\r\n      setUserData({\r\n        id: params?.id || null,\r\n        name: currentUser?.name,\r\n        email: currentUser?.email,\r\n        password: currentUser?.password,\r\n        departmentId: currentUser?.departmentId,\r\n        status: currentUser?.status,\r\n        locationId: currentUser?.locationId,\r\n      });\r\n    });\r\n  }, [params.id]);\r\n\r\n  useEffect(() => {\r\n    getDepartmentList().then((response) => {\r\n      if (response?.status === 200) {\r\n        const departmentListTemp = response?.data?.map((item) => {\r\n          return { value: item?.id, label: item?.name };\r\n        });\r\n        setDepartmentList(departmentListTemp);\r\n      }\r\n    });\r\n\r\n    getLocationList().then((response) => {\r\n      if (response?.status === 200) {\r\n        const locationListTemp = response?.data?.map((item) => {\r\n          return { value: item?.id, label: item?.name };\r\n        });\r\n        setLocationList(locationListTemp);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleUserSave = () => {\r\n    updateUser(params?.id, userData).then((res) => {\r\n      if (res.status === 200) {\r\n        toast.success(res?.data?.message);\r\n        navigate(\"/users\");\r\n      } else {\r\n        toast.error(\"Something went wrong, please try again\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const showOptionsList = (formFieldKey) => {\r\n    switch (formFieldKey) {\r\n      case \"departmentId\":\r\n        return departmentList;\r\n      case \"locationId\":\r\n        return locationList;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const findSelectedOption = (fieldKey) => {\r\n    const fieldKeyTemp = showOptionsList(fieldKey);\r\n    if (fieldKeyTemp?.length) {\r\n      return fieldKeyTemp?.find((list) => list?.value === userData?.[fieldKey]);\r\n    }\r\n  };\r\n\r\n  const renderFormFields = () => {\r\n    return addUserFormConstants?.map((formField) => {\r\n      if (formField?.formName?.includes(\"edit_user\"))\r\n        return formField?.type !== \"select\" ? (\r\n          <div className=\"col-md-6\" key={formField?.key}>\r\n            <div className=\"form-group required\">\r\n              <label className=\"control-label\">{formField?.label}</label>\r\n              <input\r\n                type={formField?.type}\r\n                className=\"form-control\"\r\n                name={formField?.key}\r\n                required\r\n                value={userData?.[formField?.key]}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [formField.key]: e.target.value })\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"col-md-6\" key={formField?.key}>\r\n            <div className=\"form-group required\">\r\n              <label className=\"control-label\">{formField?.label}</label>\r\n              <Select\r\n                value={findSelectedOption(formField.key)}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [formField.key]: e.value })\r\n                }\r\n                options={showOptionsList(formField.key)}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content-header\">\r\n          <h1>Edit User</h1>\r\n        </section>\r\n        <section className=\"content\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xs-12\">\r\n              <div className=\"box\">\r\n                <div className=\"box-header\">\r\n                  <h3 className=\"box-title\"> User Master</h3>\r\n                </div>\r\n                <div className=\"box-body\">\r\n                  <div className=\"row\">{renderFormFields()}</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12 text-center\">\r\n                    <button\r\n                      style={{\r\n                        maxWidth: \"200px\",\r\n                        display: \"inline-block\",\r\n                        marginBottom: \"50px\",\r\n                      }}\r\n                      type=\"submit\"\r\n                      className=\"btn btn-success btn-block btn-flat r-btn\"\r\n                      onClick={() => handleUserSave()}\r\n                      disabled={\r\n                        (!userData?.name ||\r\n                          !userData?.email ||\r\n                          !userData?.departmentId,\r\n                        !userData?.locationId)\r\n                      }\r\n                    >\r\n                      Update\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditUser;\r\n","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/department/DepartmentList.js",["224","225","226","227"],[],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction DepartmentList(props) {\r\n\r\n    const [departments, setDepartments] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getDepartments();\r\n    }, []);\r\n\r\n    // get departments\r\n    const getDepartments = () => {\r\n        axios\r\n            .get(\"http://localhost:8080/api/departments/\")\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    setDepartments(response?.data);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const onDelete = (id) => {\r\n        axios.delete(`http://localhost:8080/api/departments/${id}`)\r\n        .then(() => {\r\n            getDepartments();\r\n        })\r\n    }\r\n\r\n    const setData = (data) => {\r\n        let { id, name } = data;\r\n        localStorage.setItem('id', id);\r\n        localStorage.setItem('name', name);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"content-wrapper\">\r\n                <section className=\"content-header\">\r\n                    <h1>Add New Department</h1>\r\n                </section>\r\n                <section className=\"content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"box\">\r\n                                <div className=\"box-header\">\r\n                                    <h3 className=\"box-title\"> Department List</h3>\r\n                                </div>\r\n                                <div className=\"box-body\">\r\n                                    <a href=\"/addDepartment\"><button className=\"btn btn-success\"><i className=\"glyphicon glyphicon-plus\"></i> Add Department</button></a>\r\n                                    <button className=\"btn btn-default\" onClick=\"reload_table()\"><i className=\"glyphicon glyphicon-refresh\"></i> Reload</button>\r\n                                    <br />\r\n                                    <br />\r\n                                    <table id=\"table\" className=\"table table-bordered table-hover\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th width=\"10%\">Sr. No </th>\r\n                                                <th width=\"60%\">Name</th>\r\n                                                <th width=\"15%\"></th>\r\n                                                <th width=\"15%\"></th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {departments &&\r\n                                                departments.map((department) => (\r\n                                                    <tr key={department?.id} >\r\n                                                        <td> {department?.id} </td>\r\n                                                        <td>{department?.name}</td>\r\n                                                        <td>    \r\n                                                                <Link  to={\"/addDepartment\"} title={\"Edit\"}> Edit </Link>\r\n                                                        </td>\r\n                                                        <td><button className=\"btn btn-danger\" onClick={() => onDelete(department?.id)}><i className=\"fa fa-trash-o\"></i> Delete </button></td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DepartmentList;","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/department/AddDepartment.js",["228","229","230","231"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport DepartmentDataService from \"../../services/DepartmentDataService\";\r\n\r\nfunction AddDepartment(props) {\r\n  const navigate = useNavigate(); // <-- hooks must be INSIDE the component\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [contactNo, setContactNo] = useState(\"\");\r\n\r\n  const saveDepartment = () => {\r\n    var data = {\r\n      name: name,\r\n      address: address,\r\n      city: city,\r\n      contactNo: contactNo,\r\n    };\r\n    DepartmentDataService.create(data)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        navigate(\"/departments\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content-header\">\r\n          <h1>Add New Department</h1>\r\n        </section>\r\n        <section className=\"content\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xs-12\">\r\n              <div className=\"box\">\r\n                <div className=\"box-header\">\r\n                  <h3 className=\"box-title\"> Department Master</h3>\r\n                </div>\r\n                <div className=\"box-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group required\">\r\n                        <label className=\"control-label\">Department Name</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"name\"\r\n                          value={name}\r\n                          onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group required\">\r\n                        <label className=\"control-label\">Address</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"address\"\r\n                          value={address}\r\n                          onChange={(e) => setAddress(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group required\">\r\n                        <label className=\"control-label\">City</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"city\"\r\n                          value={city}\r\n                          onChange={(e) => setCity(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group required\">\r\n                        <label className=\"control-label\">Contact No</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"contactNo\"\r\n                          value={contactNo}\r\n                          onChange={(e) => setContactNo(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-3\"></div>\r\n                    <div className=\"col-md-3\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success btn-block btn-flat r-btn\"\r\n                        onClick={saveDepartment}\r\n                        disabled={!name || !address || !city || !contactNo}\r\n                      >\r\n                        Save\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"col-md-6\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddDepartment;\r\n","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/department/EditDepartment.js",["232","233","234","235"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport DepartmentDataService from \"../../services/DepartmentDataService\";\r\n\r\nfunction EditDepartment(props) {\r\n  const navigate = useNavigate(); // <-- hooks must be INSIDE the component\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [contactNo, setContactNo] = useState(\"\");\r\n\r\n  const saveDepartment = () => {\r\n    var data = {\r\n      name: name,\r\n      address: address,\r\n      city: city,\r\n      contactNo: contactNo,\r\n    };\r\n    DepartmentDataService.create(data)\r\n      .then((response) => {\r\n        navigate(\"/departments\");\r\n      })\r\n      .catch((e) => {});\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content-header\">\r\n          <h1>Add New Department</h1>\r\n        </section>\r\n        <section className=\"content\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xs-12\">\r\n              <div className=\"box\">\r\n                <div className=\"box-header\">\r\n                  <h3 className=\"box-title\"> Department Master</h3>\r\n                </div>\r\n                <div className=\"box-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group required\">\r\n                        <label className=\"control-label\">Department Name</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"name\"\r\n                          value={name}\r\n                          onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group required\">\r\n                        <label className=\"control-label\">Address</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"address\"\r\n                          value={address}\r\n                          onChange={(e) => setAddress(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group required\">\r\n                        <label className=\"control-label\">City</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"city\"\r\n                          value={city}\r\n                          onChange={(e) => setCity(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group required\">\r\n                        <label className=\"control-label\">Contact No</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"contactNo\"\r\n                          value={contactNo}\r\n                          onChange={(e) => setContactNo(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-3\"></div>\r\n                    <div className=\"col-md-3\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success btn-block btn-flat r-btn\"\r\n                        onClick={saveDepartment}\r\n                      >\r\n                        Save\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"col-md-6\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditDepartment;\r\n","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/complaint/ComplaintList.js",["236","237","238","239","240"],[],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ComplaintList(props) {\r\n  const [complaints, setComplaints] = useState([]);\r\n\r\n  const userId = localStorage.getItem(\"userId\");\r\n\r\n  useEffect(() => {\r\n    getComplaints();\r\n  }, [userId]);\r\n\r\n  // get complaints\r\n  const getComplaints = () => {\r\n    axios\r\n      .get(`http://localhost:8080/api/complaints/findByUser/${userId}`)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          setComplaints(response?.data);\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const onDelete = (id) => {\r\n    axios.delete(`http://localhost:8080/api/complaints/${id}`).then(() => {\r\n      getComplaints();\r\n    });\r\n  };\r\n\r\n  const setData = (data) => {\r\n    let { id, title, description, status } = data;\r\n    localStorage.setItem(\"id\", id);\r\n    localStorage.setItem(\"title\", title);\r\n    localStorage.setItem(\"description\", description);\r\n    localStorage.setItem(\"status\", status);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content-header\">\r\n          <h1>Add New Complaint</h1>\r\n        </section>\r\n        <section className=\"content\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xs-12\">\r\n              <div className=\"box\">\r\n                <div className=\"box-header\">\r\n                  <h3 className=\"box-title\"> Complaint List</h3>\r\n                </div>\r\n                <div className=\"box-body\">\r\n                  <a href=\"addComplaint\">\r\n                    <button className=\"btn btn-success\">\r\n                      <i className=\"glyphicon glyphicon-plus\"></i> Add Complaint\r\n                    </button>\r\n                  </a>\r\n                  <button className=\"btn btn-default\" onClick=\"reload_table()\">\r\n                    <i className=\"glyphicon glyphicon-refresh\"></i> Reload\r\n                  </button>\r\n                  <br />\r\n                  <br />\r\n                  <table\r\n                    id=\"table\"\r\n                    className=\"table table-bordered table-hover\"\r\n                  >\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Sr. No. </th>\r\n                        <th>Title</th>\r\n                        <th>Description</th>\r\n                        <th>Department</th>\r\n                        <th>Location</th>\r\n                        <th>Status</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {complaints &&\r\n                        complaints.map((post) => (\r\n                          <tr key={post?.id}>\r\n                            <td> {post?.id} </td>\r\n                            <td>{post?.title}</td>\r\n                            <td>{post?.description}</td>\r\n                            <td>{post?.department?.name}</td>\r\n                            <td>{post?.location?.name}</td>\r\n\r\n                            <td>{post?.status}</td>\r\n                            <td>\r\n                              <Link\r\n                                to={`/editComplaint/${post?.id}`}\r\n                                title={\"Edit\"}\r\n                              >\r\n                                {\" \"}\r\n                                Edit{\" \"}\r\n                              </Link>\r\n                            </td>\r\n                            <td>\r\n                              <button\r\n                                className=\"btn btn-danger\"\r\n                                onClick={() => onDelete(post?.id)}\r\n                              >\r\n                                <i className=\"fa fa-trash-o\"></i> Delete{\" \"}\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ComplaintList;\r\n","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/complaint/AddComplaint.js",["241"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\n\r\nimport {\r\n  addComplaints,\r\n  getDepartmentList,\r\n  getLocationList,\r\n  getUsers,\r\n} from \"../../api\";\r\nimport { addComplaintFormConstants } from \"../constants\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction AddComplaint(props) {\r\n  const navigate = useNavigate();\r\n\r\n  const [departmentList, setDepartmentList] = useState({});\r\n  const [userList, setUserList] = useState({});\r\n  const [addComplaintFormFields, setAddComplaintFormFields] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    userId: \"\",\r\n    departmentId: \"\",\r\n    status: \"New Complaint\",\r\n  });\r\n  const [locationList, setLocationList] = useState({});\r\n\r\n  const localUserId = localStorage.getItem(\"userId\");\r\n  const role = localStorage.getItem(\"role\");\r\n\r\n  useEffect(() => {\r\n    if (localUserId) {\r\n      if (role === \"ROLE_USER\") {\r\n        setAddComplaintFormFields({\r\n          ...addComplaintFormFields,\r\n          userId: localUserId,\r\n        });\r\n      }\r\n    }\r\n    if (role === \"ROLE_ADMIN\") {\r\n      getUsers().then((response) => {\r\n        if (response?.status === 200) {\r\n          const userListTemp = response?.data?.map((item) => {\r\n            return { value: item?.id, label: item?.name };\r\n          });\r\n          setUserList(userListTemp);\r\n          return response?.data;\r\n        }\r\n      });\r\n    }\r\n  }, [localUserId, role]);\r\n\r\n  useEffect(() => {\r\n    getDepartmentList().then((response) => {\r\n      if (response?.status === 200) {\r\n        const departmentListTemp = response?.data?.map((item) => {\r\n          return { value: item?.id, label: item?.name };\r\n        });\r\n        setDepartmentList(departmentListTemp);\r\n      }\r\n    });\r\n\r\n    getLocationList().then((response) => {\r\n      if (response?.status === 200) {\r\n        const locationListTemp = response?.data?.map((item) => {\r\n          return { value: item?.id, label: item?.name };\r\n        });\r\n        setLocationList(locationListTemp);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    addComplaints(addComplaintFormFields).then((response) => {\r\n      if (response?.status === 200) {\r\n        toast.success(\"Complaint added successfully\");\r\n        if (role === \"ROLE_ADMIN\") {\r\n          navigate(\"/adminComplaints\");\r\n        } else {\r\n          navigate(\"/complaints\");\r\n        }\r\n      } else {\r\n        toast.error(\"Something went wrong, please try again\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const showOptionsList = (formFieldKey) => {\r\n    switch (formFieldKey) {\r\n      case \"departmentId\":\r\n        return departmentList;\r\n      case \"userId\":\r\n        return userList;\r\n      case \"locationId\":\r\n        return locationList;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  console.log(\"addComplaintFormFields\", addComplaintFormFields);\r\n\r\n  const renderFormFields = () => {\r\n    return addComplaintFormConstants?.map((formField) => {\r\n      if (formField?.roleList?.includes(role)) {\r\n        return formField?.type === \"text\" ? (\r\n          <div className=\"col-md-6\" key={formField?.key}>\r\n            <div className=\"form-group required\">\r\n              <label className=\"control-label\">{formField?.label}</label>\r\n              <input\r\n                type={formField?.type}\r\n                className=\"form-control\"\r\n                name={formField?.key}\r\n                value={addComplaintFormFields?.[formField?.key]}\r\n                onChange={(e) =>\r\n                  setAddComplaintFormFields({\r\n                    ...addComplaintFormFields,\r\n                    [formField?.key]: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"col-md-6\" key={formField?.key}>\r\n            <div className=\"form-group required\">\r\n              <label className=\"control-label\">{formField?.label}</label>\r\n              <Select\r\n                onChange={(e) =>\r\n                  setAddComplaintFormFields({\r\n                    ...addComplaintFormFields,\r\n                    [formField?.key]: e.value,\r\n                  })\r\n                }\r\n                options={showOptionsList(formField?.key)}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      return \"\";\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content-header\">\r\n          <h1>Add New Complaint</h1>\r\n        </section>\r\n        <section className=\"content\" style={{ minHeight: \"500px\" }}>\r\n          <div className=\"row\">\r\n            <div className=\"col-xs-12\">\r\n              <div className=\"box\">\r\n                <div className=\"box-header\">\r\n                  <h3 className=\"box-title\"> Complaint Master</h3>\r\n                </div>\r\n                <div className=\"box-body\">\r\n                  <div className=\"row\">{renderFormFields()}</div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                      <button\r\n                        style={{ width: \"200px\", display: \"inline-block\" }}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success btn-block btn-flat r-btn\"\r\n                        onClick={(e) => {\r\n                          handleSubmit(e);\r\n                        }}\r\n                        disabled={Object.values(addComplaintFormFields)?.some(\r\n                          (item) => item === \"\" || item === null\r\n                        )}\r\n                      >\r\n                        Save\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"col-md-6\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddComplaint;\r\n","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/admin/complaint/AdminComplaintList.js",["242"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\n\r\nimport {\r\n  sendAdminComplaint,\r\n  getDepartmentList,\r\n  getLocationList,\r\n  getUsers,\r\n  getAdminComplaints,\r\n} from \"../../../api/CommonApi\";\r\nimport PageLoader from \"../../common/PageLoader\";\r\nimport { filterFormFields, userStatusList } from \"../../constants\";\r\n\r\nfunction AdminComplaintList(props) {\r\n  const [complaints, setComplaints] = useState([]);\r\n  const [complaintId, setComplaintId] = useState(\"\");\r\n  const [commentMessage, setCommentMessage] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [departmentList, setDepartmentList] = useState({});\r\n  const [locationList, setLocationList] = useState({});\r\n  const [userList, setUserList] = useState({});\r\n  const [filterParams, setFilterParams] = useState({});\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    getComplaints();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getDepartmentList().then((response) => {\r\n      if (response?.status === 200) {\r\n        const departmentListTemp = response?.data?.map((item) => {\r\n          return { value: item?.id, label: item?.name };\r\n        });\r\n        setDepartmentList(departmentListTemp);\r\n      }\r\n    });\r\n\r\n    getLocationList().then((response) => {\r\n      if (response?.status === 200) {\r\n        const locationListTemp = response?.data?.map((item) => {\r\n          return { value: item?.id, label: item?.name };\r\n        });\r\n        setLocationList(locationListTemp);\r\n      }\r\n    });\r\n\r\n    getUsers().then((response) => {\r\n      if (response?.status === 200) {\r\n        const userListTemp = response?.data?.map((item) => {\r\n          return { value: item?.id, label: item?.name };\r\n        });\r\n        setUserList(userListTemp);\r\n        return response?.data;\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // get complaints\r\n  const getComplaints = (filterFormFieldsParams) => {\r\n    setIsLoading(true);\r\n    getAdminComplaints(filterFormFieldsParams).then((response) => {\r\n      setIsLoading(false);\r\n      if (response.status === 200) {\r\n        setComplaints(response?.data);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onDelete = (id) => {\r\n    axios\r\n      .delete(`http://localhost:8080/api/admin/complaints/${id}`)\r\n      .then(() => {\r\n        getComplaints();\r\n      });\r\n  };\r\n\r\n  const setData = (data) => {\r\n    let { id, title, description, status } = data;\r\n    localStorage.setItem(\"id\", id);\r\n    localStorage.setItem(\"title\", title);\r\n    localStorage.setItem(\"description\", description);\r\n    localStorage.setItem(\"status\", status);\r\n  };\r\n\r\n  const sendComplaints = (statusParam) => {\r\n    setIsLoading(true);\r\n    const complaintChangeData = {\r\n      status: statusParam,\r\n      comment: commentMessage,\r\n    };\r\n    sendAdminComplaint(complaintChangeData, complaintId).then((response) => {\r\n      if (response?.status === 200) {\r\n        setIsLoading(false);\r\n        getComplaints();\r\n        toast.success(\"Status Updated\");\r\n      }\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  const showOptionsList = (formFieldKey) => {\r\n    switch (formFieldKey) {\r\n      case \"departmentId\":\r\n        return departmentList;\r\n      case \"userId\":\r\n        return userList;\r\n      case \"locationId\":\r\n        return locationList;\r\n      case \"statusId\":\r\n        return userStatusList;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const findSelectedValue = (keyParam) => {\r\n    const listName = showOptionsList(keyParam);\r\n    if (listName?.length && filterParams?.[keyParam]) {\r\n      const selectedList = listName?.find(\r\n        (item) => item?.value === filterParams?.[keyParam]\r\n      );\r\n      return selectedList;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content-header\">\r\n          <h1>Add New Complaint</h1>\r\n        </section>\r\n        <section className=\"content\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xs-12\">\r\n              <div className=\"box\">\r\n                <div className=\"box-header\">\r\n                  <h3 className=\"box-title\"> Complaint List</h3>\r\n                </div>\r\n                <div className=\"box-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-xs-2\">\r\n                      <br />\r\n                      <a href=\"addComplaint\">\r\n                        <button className=\"btn btn-success\">\r\n                          <i className=\"glyphicon glyphicon-plus\"></i> Add\r\n                          Complaint\r\n                        </button>\r\n                      </a>\r\n                      <button\r\n                        className=\"btn btn-default\"\r\n                        onClick=\"reload_table()\"\r\n                      >\r\n                        <i className=\"glyphicon glyphicon-refresh\"></i> Reload\r\n                      </button>\r\n                    </div>\r\n                    {filterFormFields?.map((formField) => {\r\n                      return (\r\n                        <div className=\"col-xs-2\">\r\n                          <label className=\"control-label\">\r\n                            {formField?.label}\r\n                          </label>\r\n                          <Select\r\n                            onChange={(e) =>\r\n                              setFilterParams({\r\n                                ...filterParams,\r\n                                [formField.key]: e.value,\r\n                              })\r\n                            }\r\n                            options={showOptionsList(formField?.key)}\r\n                            value={findSelectedValue(formField?.key)}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                    <div className=\"col-xs-2\">\r\n                      <br />\r\n                      <button\r\n                        className=\"btn btn-success\"\r\n                        onClick={() => {\r\n                          getComplaints(filterParams);\r\n                        }}\r\n                      >\r\n                        <i className=\"glyphicon glyphicon-search\"></i> Search\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-default\"\r\n                        onClick={() => {\r\n                          setFilterParams({});\r\n                          getComplaints(null);\r\n                        }}\r\n                      >\r\n                        <i className=\"glyphicon glyphicon-refresh\"></i> Clear\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <br />\r\n                  <br />\r\n\r\n                  <div id=\"myModal\" className=\"modal fade\">\r\n                    <div className=\"modal-dialog\">\r\n                      <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                          <h5 className=\"modal-title\">Your Feedback</h5>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"close\"\r\n                            data-dismiss=\"modal\"\r\n                            onClick={() => {\r\n                              setComplaintId(\"\");\r\n                            }}\r\n                          >\r\n                            &times;\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                          <form>\r\n                            <div className=\"form-group\">\r\n                              <label htmlFor=\"inputComment\">Comments</label>\r\n                              <textarea\r\n                                className=\"form-control\"\r\n                                id=\"inputComment\"\r\n                                rows=\"2\"\r\n                                value={commentMessage}\r\n                                // value={\r\n                                //   complaints?.find(\r\n                                //     (complaint) => complaint?.id === complaintId\r\n                                //   )?.comment\r\n                                // }\r\n                                onChange={(e) =>\r\n                                  setCommentMessage(e.target.value)\r\n                                }\r\n                              ></textarea>\r\n                            </div>\r\n                          </form>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                          <button\r\n                            type=\"button\"\r\n                            data-dismiss=\"modal\"\r\n                            className=\"btn btn-success\"\r\n                            onClick={() => {\r\n                              setComplaintId(\"\");\r\n                              sendComplaints(\"Approved\");\r\n                              setCommentMessage(\"\");\r\n                            }}\r\n                          >\r\n                            Approve\r\n                          </button>\r\n                          <button\r\n                            type=\"button\"\r\n                            data-dismiss=\"modal\"\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {\r\n                              setComplaintId(\"\");\r\n                              sendComplaints(\"Denied\");\r\n                              setCommentMessage(\"\");\r\n                            }}\r\n                          >\r\n                            Denied\r\n                          </button>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-default\"\r\n                            data-dismiss=\"modal\"\r\n                            onClick={() => {\r\n                              setComplaintId(\"\");\r\n                              setCommentMessage(\"\");\r\n                            }}\r\n                          >\r\n                            Cancel\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {isLoading ? (\r\n                    <PageLoader />\r\n                  ) : (\r\n                    <table\r\n                      id=\"table\"\r\n                      className=\"table table-bordered table-hover\"\r\n                    >\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Sr. No. </th>\r\n                          <th width=\"10%\">Complaint Date</th>\r\n                          <th width=\"10%\">Resolved Date</th>\r\n                          <th width=\"10%\">Title</th>\r\n                          <th width=\"10%\">Description</th>\r\n                          <th width=\"10%\">User name</th>\r\n                          <th width=\"10%\">User email</th>\r\n                          <th width=\"5%\">User location</th>\r\n                          <th width=\"5%\">Department</th>\r\n                          <th width=\"5%\">Status</th>\r\n                          <th width=\"10%\">Comment</th>\r\n                          <th width=\"5%\">change status</th>\r\n                          <th width=\"10%\">Action</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {complaints?.length ? (\r\n                          complaints.map((complaint) => (\r\n                            <tr key={complaint?.id}>\r\n                              <td> {complaint?.id} </td>\r\n                              <td>{complaint?.complaint_added_date} </td>\r\n                              <td>{complaint?.complaint_resolved_date} </td>\r\n                              <td>{complaint?.title}</td>\r\n                              <td>{complaint?.description}</td>\r\n                              <td>{complaint?.user?.name}</td>\r\n                              <td>{complaint?.user?.email}</td>\r\n                              <td>{complaint?.location?.name}</td>\r\n                              <td>{complaint?.department?.name}</td>\r\n                              <td>{complaint?.status}</td>\r\n                              <td>{complaint?.comment}</td>\r\n                              <td>\r\n                                <button\r\n                                  href=\"#myModal\"\r\n                                  className=\"btn btn-primary\"\r\n                                  data-toggle=\"modal\"\r\n                                  onClick={() => {\r\n                                    setComplaintId(complaint?.id);\r\n                                    setCommentMessage(complaint?.comment);\r\n                                  }}\r\n                                >\r\n                                  Change{\" \"}\r\n                                </button>\r\n                              </td>\r\n                              <td>\r\n                                <button\r\n                                  className=\"btn btn-danger\"\r\n                                  onClick={() => onDelete(complaint?.id)}\r\n                                >\r\n                                  <i className=\"fa fa-trash-o\"></i>{\" \"}\r\n                                </button>{\" \"}\r\n                                &nbsp;\r\n                                <button\r\n                                  className=\"btn btn-success\"\r\n                                  onClick={() =>\r\n                                    navigate(`/editComplaint/${complaint?.id}`)\r\n                                  }\r\n                                >\r\n                                  <i className=\"fa fa-pencil\"></i>{\" \"}\r\n                                </button>\r\n                              </td>\r\n                            </tr>\r\n                          ))\r\n                        ) : (\r\n                          <tr>\r\n                            <td colspan=\"10\" className=\"text-center\">\r\n                              <h3>No records found</h3>\r\n                            </td>\r\n                          </tr>\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminComplaintList;\r\n","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/services/UserDataService.js",[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/services/ComplaintDataService.js",[],[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/services/DepartmentDataService.js",[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/http-common.js",[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/context/AuthProvider.js",[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/common/StoreLocalData.js",[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/constants/index.js",[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/constants/FormConstants.js",[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/constants/ApiPathConstants.js",[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/constants/RouteConstants.js",[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/authentication/Login.js",["243","244"],["245"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { toast } from \"react-toastify\";\n\nimport { loginFormConstantants, registerFormConstantants } from \"../constants\";\nimport { signIn, signUp, getDepartmentList , getLocationList } from \"../../api\";\nimport AuthContext from \"../../context/AuthProvider\";\n\nexport const Login = () => {\n  const [loginFormFields, setLoginFormFields] = useState({});\n  const [registerFormFields, setRegisterFormFields] = useState({\n    password: \"\",\n    retype_password: \"\",\n    email: \"\",\n    name: \"\",\n    departmentId: null,\n    locationId: null,\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [departmentList, setDepartmentList] = useState({});\n  const [locationList, setLocationList] = useState({});\n\n  const [showForm, setShowForm] = useState(\"login\");\n  const { setAuth } = useContext(AuthContext);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getDepartmentList().then((response) => {\n      if (response?.status === 200) {\n        const departmentListTemp = response?.data?.map((item) => {\n          return { value: item?.id, label: item?.name };\n        });\n        setDepartmentList(departmentListTemp);\n      }\n    });\n\n    getLocationList().then((response) => {\n      if (response?.status === 200) {\n        const locationListTemp = response?.data?.map((item) => {\n          return { value: item?.id, label: item?.name };\n        });\n        setLocationList(locationListTemp);\n      }\n    });\n\n  }, []);\n\n  // Check Email Validation\n  const emailValidation = (keyParam, emailParam) => {\n    const regex =\n      /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    if (keyParam === \"email\") {\n      if (!emailParam || regex.test(emailParam) === false) {\n        setEmailError(true);\n        return false;\n      }\n      setEmailError(false);\n      return true;\n    }\n    return \"\";\n  };\n\n  const registerFormHandlers = (key, value) => {\n    setRegisterFormFields({\n      ...registerFormFields,\n      [key]: value,\n    });\n    emailValidation(key, value);\n    if (key === \"password\" || key === \"retype_password\") {\n      setPasswordError(false);\n    }\n  };\n\n  const renderLoginForm = (formFieldConstants) => {\n    return formFieldConstants?.map((item) => {\n      return (\n        <>\n          {item.type !== \"select\" ? (\n            <div className=\"col-12\" key={item?.key}>\n              <div className=\"form-group\">\n                <label>{item?.label}</label>\n                <input\n                  type={item?.type}\n                  placeholder={item?.label}\n                  className=\"form-control\"\n                  name={item?.key}\n                  onChange={(e) => {\n                    // eslint-disable-next-line no-unused-expressions\n                    showForm === \"login\"\n                      ? (setLoginFormFields({\n                          ...loginFormFields,\n                          [item.key]: e.target.value,\n                        }),\n                        setErrorMessage(\"\"))\n                      : registerFormHandlers(item?.key, e.target.value);\n                  }}\n                />\n                {item?.key === \"email\" && showForm !== \"login\" && emailError ? (\n                  <p\n                    className=\"text-right error-message\"\n                    style={{ marginTop: \"0px\" }}\n                  >\n                    Pease enter correct email.\n                  </p>\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </div>\n          ) : (\n            <div className=\"col-12\" key={item?.key}>\n              <div className=\"form-group\">\n                <label>{item?.label}</label>\n                <Select\n                  value={departmentList?.find(\n                    (department) =>\n                      department?.value ===\n                      registerFormConstantants?.departmentId\n                  )}\n                  onChange={(e) =>\n                    setRegisterFormFields({\n                      ...registerFormFields,\n                      [item?.key]: e.value,\n                    })\n                  }\n                  options={departmentList}\n                />\n              </div>\n            </div>\n          )}\n        </>\n      );\n    });\n  };\n\n  const handleLogin = () => {\n    signIn(loginFormFields)?.then((res) => {\n      if (res.status === 200) {\n        localStorage.setItem(\"token\", res.data.accessToken);\n        localStorage.setItem(\"name\", res.data.name);\n        localStorage.setItem(\"role\", res.data.roles[0]);\n        localStorage.setItem(\"email\", res.data.email);\n        localStorage.setItem(\"userId\", res.data.id);\n        const updatedUser = {\n          token: res.data.accessToken,\n          name: res.data.name,\n        };\n        setAuth?.(updatedUser);\n        if (res.data.roles[0] === \"ROLE_ADMIN\") {\n          navigate(\"/\", { replace: true });\n        } else {\n          navigate(\"/complaints\", { replace: true });\n        }\n      }\n      if (res?.response?.status === 401 || res?.response?.status === 404) {\n        setErrorMessage(res?.response?.data?.message);\n      }\n    });\n  };\n\n  const handleRegister = () => {\n    const signUpData = {\n      ...registerFormFields,\n      userType: \"U\",\n    };\n\n    if (registerFormFields?.password !== registerFormFields?.retype_password) {\n      setPasswordError(true);\n    }\n    if (registerFormFields?.password === registerFormFields?.retype_password) {\n      signUp(signUpData).then((response) => {\n        if (response?.status === 200) {\n          toast.success(\n            \"You have been registered successfully, Admin team will contact you soon.\"\n          );\n        } else {\n          toast.error(\n            response?.response?.data?.message ||\n              \"Something went wrong please try again latter!\"\n          );\n        }\n      });\n    }\n  };\n\n  const renderFormLink = (text, formValue) => {\n    return (\n      <>\n        <div\n          className=\"register-login-link\"\n          onClick={() => setShowForm(formValue)}\n        >\n          {text}\n        </div>\n        {formValue !== \"login\" ? (\n          <div className=\"register-login-link forgot-link\">\n            I forgot my password\n          </div>\n        ) : (\n          \"\"\n        )}\n      </>\n    );\n  };\n  return (\n    <>\n      <div className=\"content-wrapper\">\n        <section className=\"content\">\n          <div className=\"login-wrapper\">\n            <section className=\"content-header\">\n              <h1 className=\"login-heading\">Sign In</h1>\n            </section>\n            <div className=\"box\">\n              <div className=\"box-body \">\n                <div className=\"row\">\n                  {renderLoginForm(\n                    showForm === \"login\"\n                      ? loginFormConstantants\n                      : registerFormConstantants\n                  )}\n                  {showForm === \"login\" ? (\n                    <div className=\"error-message\">{errorMessage}</div>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n                {passwordError && showForm !== \"login\" ? (\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      <p className=\"error-message\">\n                        Please make sure your password match\n                      </p>\n                    </div>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-success btn-block btn-flat r-btn login-btn\"\n                      onClick={() =>\n                        showForm === \"login\" ? handleLogin() : handleRegister()\n                      }\n                      disabled={\n                        showForm !== \"login\"\n                          ? Object.values(registerFormFields).includes(\n                              \"\" || null\n                            ) ||\n                            passwordError ||\n                            emailError\n                          : false\n                      }\n                    >\n                      {showForm === \"login\" ? \"Sign In\" : \"Register\"}\n                    </button>\n                  </div>\n                </div>\n                \n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n};\n","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/authentication/ProtectedRoutes.js",[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/api/index.js",[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/api/AuthApi.js",[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/axiosInstance.js",[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/authentication/useLogOut.js",[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/api/CommonApi.js",[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/common/PageLoader.js",[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/common/Toaster.js",[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/common/Profile.js",[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/common/PageNotFound.js",[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/complaint/EditComplaint.js",["246","247","248"],[],"import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Select from \"react-select\";\n\nimport {\n  addComplaints,\n  getDepartmentList,\n  getUsers,\n  getComplaintById,\n  updateComplaintById,\n  getLocationList,\n} from \"../../api\";\nimport { addComplaintFormConstants } from \"../constants\";\nimport { toast } from \"react-toastify\";\nimport {\n  API_USER_COMPLAINTS,\n  API_ADMIN_COMPLAINTS,\n} from \"../../component/constants\";\n\nfunction EditComplaint(props) {\n  const navigate = useNavigate();\n\n  const [departmentList, setDepartmentList] = useState({});\n  const [userList, setUserList] = useState({});\n  const [locationList, setLocationList] = useState({});\n  const [addComplaintFormFields, setAddComplaintFormFields] = useState({\n    title: \"\",\n    description: \"\",\n    userId: \"\",\n    departmentId: \"\",\n    status: \"\",\n    locationId: \"\",\n  });\n\n  const localUserId = localStorage.getItem(\"userId\");\n  const role = localStorage.getItem(\"role\");\n  const params = useParams();\n\n  useEffect(() => {\n    if (params?.id) {\n      getComplaintById(params?.id).then((res) => {\n        setAddComplaintFormFields({\n          title: res?.data?.title || \"\",\n          description: res?.data?.description || \"\",\n          userId: res?.data?.userId || \"\",\n          departmentId: res?.data?.departmentId || \"\",\n          status: res?.data?.status || \"\",\n          locationId: res?.data?.locationId || \"\",\n        });\n      });\n    }\n    if (role === \"ROLE_ADMIN\") {\n      getUsers().then((response) => {\n        if (response?.status === 200) {\n          const userListTemp = response?.data?.map((item) => {\n            return { value: item?.id, label: item?.name };\n          });\n          setUserList(userListTemp);\n          return response?.data;\n        }\n      });\n    }\n  }, [params.id, role]);\n\n  useEffect(() => {\n    getDepartmentList().then((response) => {\n      if (response?.status === 200) {\n        const departmentListTemp = response?.data?.map((item) => {\n          return { value: item?.id, label: item?.name };\n        });\n        setDepartmentList(departmentListTemp);\n      }\n    });\n\n    getLocationList().then((response) => {\n      if (response?.status === 200) {\n        const locationListTemp = response?.data?.map((item) => {\n          return { value: item?.id, label: item?.name };\n        });\n        setLocationList(locationListTemp);\n      }\n    });\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const apiPath =\n      role === \"ROLE_USER\" ? API_USER_COMPLAINTS : API_ADMIN_COMPLAINTS;\n    updateComplaintById(apiPath, params?.id, addComplaintFormFields).then(\n      (response) => {\n        if (response?.status === 200) {\n          toast.success(\"Complaint added successfully\");\n          if (role === \"ROLE_ADMIN\") {\n            navigate(\"/adminComplaints\");\n          } else {\n            navigate(\"/complaints\");\n          }\n        } else {\n          toast.error(\"Something went wrong, please try again\");\n        }\n      }\n    );\n  };\n\n  const showOptionsList = (formFieldKey) => {\n    switch (formFieldKey) {\n      case \"departmentId\":\n        return departmentList;\n      case \"userId\":\n        return userList;\n      case \"locationId\":\n        return locationList;\n      default:\n        return \"\";\n    }\n  };\n\n  const findSelectedOption = (listParam) => {\n    const listParamTemp = showOptionsList(listParam);\n    if (listParamTemp?.length) {\n      return listParamTemp?.find(\n        (list) => list?.value === addComplaintFormFields[listParam]\n      );\n    }\n  };\n\n  const renderFormFields = () => {\n    return addComplaintFormConstants?.map((formField) => {\n      if (formField?.roleList?.includes(role)) {\n        return formField?.type === \"text\" ? (\n          <div className=\"col-md-6\" key={formField?.key}>\n            <div className=\"form-group required\">\n              <label className=\"control-label\">{formField?.label}</label>\n              <input\n                type={formField?.type}\n                className=\"form-control\"\n                name={formField?.key}\n                value={addComplaintFormFields?.[formField?.key]}\n                onChange={(e) =>\n                  setAddComplaintFormFields({\n                    ...addComplaintFormFields,\n                    [formField?.key]: e.target.value,\n                  })\n                }\n              />\n            </div>\n          </div>\n        ) : (\n          <div className=\"col-md-6\" key={formField?.key}>\n            <div className=\"form-group required\">\n              <label className=\"control-label\">{formField?.label}</label>\n              <Select\n                value={findSelectedOption(formField?.key)}\n                onChange={(e) =>\n                  setAddComplaintFormFields({\n                    ...addComplaintFormFields,\n                    [formField?.key]: e.value,\n                  })\n                }\n                options={showOptionsList(formField?.key)}\n              />\n            </div>\n          </div>\n        );\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"content-wrapper\">\n        <section className=\"content-header\">\n          <h1>Edit Complaint</h1>\n        </section>\n        <section className=\"content\" style={{ minHeight: \"500px\" }}>\n          <div className=\"row\">\n            <div className=\"col-xs-12\">\n              <div className=\"box\">\n                <div className=\"box-header\">\n                  <h3 className=\"box-title\"> Complaint Master</h3>\n                </div>\n                <div className=\"box-body\">\n                  <div className=\"row\">{renderFormFields()}</div>\n                  <div className=\"row\">\n                    <div className=\"col-md-12 text-center\">\n                      <button\n                        style={{ width: \"200px\", display: \"inline-block\" }}\n                        type=\"submit\"\n                        className=\"btn btn-success btn-block btn-flat r-btn\"\n                        onClick={(e) => {\n                          handleSubmit(e);\n                        }}\n                        disabled={\n                          !addComplaintFormFields?.title ||\n                          !addComplaintFormFields?.description |\n                            !addComplaintFormFields?.userId ||\n                          !addComplaintFormFields?.departmentId ||\n                          !addComplaintFormFields?.locationId\n                        }\n                      >\n                        Update\n                      </button>\n                    </div>\n                    <div className=\"col-md-6\"></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n}\n\nexport default EditComplaint;\n","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/location/LocationList.js",["249","250","251","252"],[],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction LocationList(props) {\r\n\r\n    const [locations, setLocations] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getLocations();\r\n    }, []);\r\n\r\n    // get locations\r\n    const getLocations = () => {\r\n        axios\r\n            .get(\"http://localhost:8080/api/locations/\")\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    setLocations(response?.data);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const onDelete = (id) => {\r\n        axios.delete(`http://localhost:8080/api/locations/${id}`)\r\n        .then(() => {\r\n            getLocations();\r\n        })\r\n    }\r\n\r\n    const setData = (data) => {\r\n        let { id, name } = data;\r\n        localStorage.setItem('id', id);\r\n        localStorage.setItem('name', name);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"content-wrapper\">\r\n                <section className=\"content-header\">\r\n                    <h1>Add New Location</h1>\r\n                </section>\r\n                <section className=\"content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"box\">\r\n                                <div className=\"box-header\">\r\n                                    <h3 className=\"box-title\"> Location List</h3>\r\n                                </div>\r\n                                <div className=\"box-body\">\r\n                                    <a href=\"/addLocation\"><button className=\"btn btn-success\"><i className=\"glyphicon glyphicon-plus\"></i> Add Location</button></a>\r\n                                    <button className=\"btn btn-default\" onClick=\"reload_table()\"><i className=\"glyphicon glyphicon-refresh\"></i> Reload</button>\r\n                                    <br />\r\n                                    <br />\r\n                                    <table id=\"table\" className=\"table table-bordered table-hover\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th width=\"10%\">Sr. No </th>\r\n                                                <th width=\"20%\">Name</th>\r\n                                                <th width=\"20%\">Location Incharge</th>\r\n                                                <th width=\"20%\">Incharge Email</th>\r\n                                                <th width=\"15%\"></th>\r\n                                                <th width=\"15%\"></th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {locations &&\r\n                                                locations.map((location) => (\r\n                                                    <tr key={location?.id} >\r\n                                                        <td> {location?.id} </td>\r\n                                                        <td>{location?.name}</td>\r\n                                                        <td>{location?.headName}</td>\r\n                                                        <td>{location?.email}</td>\r\n                                                        <td>    \r\n                                                                <Link  to={\"/addLocation\"} title={\"Edit\"}> Edit </Link>\r\n                                                        </td>\r\n                                                        <td><button className=\"btn btn-danger\" onClick={() => onDelete(location?.id)}><i className=\"fa fa-trash-o\"></i> Delete </button></td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LocationList;","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/location/AddLocation.js",["253","254","255","256"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport LocationDataService from \"../../services/LocationDataService\";\r\n\r\nfunction AddLocation(props) {\r\n  const navigate = useNavigate(); // <-- hooks must be INSIDE the component\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [headName, setHeadName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const saveLocation = () => {\r\n    var data = {\r\n      name: name,\r\n      headName: headName,\r\n      email: email,\r\n    };\r\n    LocationDataService.create(data)\r\n      .then((response) => {\r\n        navigate(\"/locations\");\r\n      })\r\n      .catch((e) => {});\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content-header\">\r\n          <h1>Add New Location</h1>\r\n        </section>\r\n        <section className=\"content\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xs-12\">\r\n              <div className=\"box\">\r\n                <div className=\"box-header\">\r\n                  <h3 className=\"box-title\"> Location Master</h3>\r\n                </div>\r\n                <div className=\"box-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group required\">\r\n                        <label className=\"control-label\">Location Name</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"name\"\r\n                          value={name}\r\n                          onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group required\">\r\n                        <label className=\"control-label\">\r\n                          Location Incharge\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"headName\"\r\n                          value={headName}\r\n                          onChange={(e) => setHeadName(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group required\">\r\n                        <label className=\"control-label\">Incharge Email</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"email\"\r\n                          value={email}\r\n                          onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-3\"></div>\r\n                    <div className=\"col-md-3\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success btn-block btn-flat r-btn\"\r\n                        onClick={saveLocation}\r\n                        disabled={!name || !headName || !email}\r\n                      >\r\n                        Save\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"col-md-6\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddLocation;\r\n","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/location/EditLocation.js",["257","258","259","260"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport LocationDataService from '../../services/LocationDataService';\r\n\r\nfunction EditLocation(props) {\r\n\r\n    const navigate = useNavigate() // <-- hooks must be INSIDE the component\r\n\r\n    const [id, setId] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [headName, setHeadName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    const saveLocation = () => {\r\n        var data = {\r\n            name : name,\r\n            headName : headName,\r\n            email : email\r\n        };\r\n        LocationDataService.create(data)\r\n          .then(response => {\r\n            console.log(response.data);\r\n            navigate(\"/locations\");\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"content-wrapper\">\r\n                <section className=\"content-header\">\r\n                    <h1>Add New Location</h1>\r\n                </section>\r\n                <section className=\"content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"box\">\r\n                                <div className=\"box-header\">\r\n                                    <h3 className=\"box-title\"> Location Master</h3>\r\n                                </div>\r\n                                <div className=\"box-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group required\">\r\n                                                <label className=\"control-label\">Location Name</label>\r\n                                                <input type=\"text\" className=\"form-control\" name=\"name\" value={name} onChange={(e) => setName(e.target.value)} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group required\">\r\n                                                <label className=\"control-label\">Incharge Name</label>\r\n                                                <input type=\"text\" className=\"form-control\" name=\"headName\" value={headName} onChange={(e) => setHeadName(e.target.value)} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group required\">\r\n                                                <label className=\"control-label\">Incharge Email</label>\r\n                                                <input type=\"text\" className=\"form-control\" name=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-3\">\r\n                                        </div>\r\n                                        <div className=\"col-md-3\">\r\n                                            <button type=\"submit\" className=\"btn btn-success btn-block btn-flat r-btn\" onClick={saveLocation}>Save</button>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditLocation;","/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/services/LocationDataService.js",[],[],"/home/parag/Documents/parag/Other/My Data/projects/fe/complaintms_frontend/src/component/report/ComplaintReport.js",["261","262","263","264","265","266","267","268","269","270","271","272","273","274","275"],[],{"ruleId":"276","severity":1,"message":"277","line":43,"column":12,"nodeType":"278","messageId":"279","endLine":43,"endColumn":33},{"ruleId":"276","severity":1,"message":"280","line":51,"column":12,"nodeType":"278","messageId":"279","endLine":51,"endColumn":25},{"ruleId":"281","severity":1,"message":"282","line":43,"column":17,"nodeType":"283","endLine":43,"endColumn":54},{"ruleId":"276","severity":1,"message":"284","line":1,"column":38,"nodeType":"278","messageId":"279","endLine":1,"endColumn":49},{"ruleId":"276","severity":1,"message":"285","line":20,"column":10,"nodeType":"278","messageId":"279","endLine":20,"endColumn":20},{"ruleId":"276","severity":1,"message":"286","line":20,"column":22,"nodeType":"278","messageId":"279","endLine":20,"endColumn":35},{"ruleId":"276","severity":1,"message":"287","line":74,"column":9,"nodeType":"278","messageId":"279","endLine":74,"endColumn":16},{"ruleId":"288","severity":1,"message":"289","line":155,"column":56,"nodeType":"290","messageId":"291","endLine":155,"endColumn":58},{"ruleId":"288","severity":1,"message":"289","line":97,"column":50,"nodeType":"290","messageId":"291","endLine":97,"endColumn":52},{"ruleId":"276","severity":1,"message":"284","line":1,"column":38,"nodeType":"278","messageId":"279","endLine":1,"endColumn":49},{"ruleId":"276","severity":1,"message":"292","line":3,"column":10,"nodeType":"278","messageId":"279","endLine":3,"endColumn":21},{"ruleId":"276","severity":1,"message":"293","line":3,"column":23,"nodeType":"278","messageId":"279","endLine":3,"endColumn":33},{"ruleId":"276","severity":1,"message":"287","line":35,"column":11,"nodeType":"278","messageId":"279","endLine":35,"endColumn":18},{"ruleId":"276","severity":1,"message":"294","line":1,"column":27,"nodeType":"278","messageId":"279","endLine":1,"endColumn":36},{"ruleId":"276","severity":1,"message":"295","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":13},{"ruleId":"276","severity":1,"message":"296","line":9,"column":10,"nodeType":"278","messageId":"279","endLine":9,"endColumn":12},{"ruleId":"276","severity":1,"message":"297","line":9,"column":14,"nodeType":"278","messageId":"279","endLine":9,"endColumn":19},{"ruleId":"276","severity":1,"message":"294","line":1,"column":27,"nodeType":"278","messageId":"279","endLine":1,"endColumn":36},{"ruleId":"276","severity":1,"message":"295","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":13},{"ruleId":"276","severity":1,"message":"296","line":9,"column":10,"nodeType":"278","messageId":"279","endLine":9,"endColumn":12},{"ruleId":"276","severity":1,"message":"297","line":9,"column":14,"nodeType":"278","messageId":"279","endLine":9,"endColumn":19},{"ruleId":"276","severity":1,"message":"284","line":1,"column":38,"nodeType":"278","messageId":"279","endLine":1,"endColumn":49},{"ruleId":"276","severity":1,"message":"292","line":3,"column":10,"nodeType":"278","messageId":"279","endLine":3,"endColumn":21},{"ruleId":"276","severity":1,"message":"293","line":3,"column":23,"nodeType":"278","messageId":"279","endLine":3,"endColumn":33},{"ruleId":"298","severity":1,"message":"299","line":13,"column":6,"nodeType":"300","endLine":13,"endColumn":14,"suggestions":"301"},{"ruleId":"276","severity":1,"message":"287","line":33,"column":9,"nodeType":"278","messageId":"279","endLine":33,"endColumn":16},{"ruleId":"298","severity":1,"message":"302","line":51,"column":6,"nodeType":"300","endLine":51,"endColumn":25,"suggestions":"303"},{"ruleId":"276","severity":1,"message":"287","line":82,"column":9,"nodeType":"278","messageId":"279","endLine":82,"endColumn":16},{"ruleId":"276","severity":1,"message":"304","line":24,"column":10,"nodeType":"278","messageId":"279","endLine":24,"endColumn":22},{"ruleId":"276","severity":1,"message":"305","line":190,"column":9,"nodeType":"278","messageId":"279","endLine":190,"endColumn":23},{"ruleId":"306","severity":2,"message":"307","line":93,"column":21,"nodeType":"308","messageId":"309","endLine":99,"endColumn":73,"suppressions":"310"},{"ruleId":"276","severity":1,"message":"311","line":6,"column":3,"nodeType":"278","messageId":"279","endLine":6,"endColumn":16},{"ruleId":"276","severity":1,"message":"312","line":35,"column":9,"nodeType":"278","messageId":"279","endLine":35,"endColumn":20},{"ruleId":"288","severity":1,"message":"289","line":128,"column":55,"nodeType":"290","messageId":"291","endLine":128,"endColumn":57},{"ruleId":"276","severity":1,"message":"284","line":1,"column":38,"nodeType":"278","messageId":"279","endLine":1,"endColumn":49},{"ruleId":"276","severity":1,"message":"292","line":3,"column":10,"nodeType":"278","messageId":"279","endLine":3,"endColumn":21},{"ruleId":"276","severity":1,"message":"293","line":3,"column":23,"nodeType":"278","messageId":"279","endLine":3,"endColumn":33},{"ruleId":"276","severity":1,"message":"287","line":35,"column":11,"nodeType":"278","messageId":"279","endLine":35,"endColumn":18},{"ruleId":"276","severity":1,"message":"294","line":1,"column":27,"nodeType":"278","messageId":"279","endLine":1,"endColumn":36},{"ruleId":"276","severity":1,"message":"295","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":13},{"ruleId":"276","severity":1,"message":"296","line":9,"column":10,"nodeType":"278","messageId":"279","endLine":9,"endColumn":12},{"ruleId":"276","severity":1,"message":"297","line":9,"column":14,"nodeType":"278","messageId":"279","endLine":9,"endColumn":19},{"ruleId":"276","severity":1,"message":"294","line":1,"column":27,"nodeType":"278","messageId":"279","endLine":1,"endColumn":36},{"ruleId":"276","severity":1,"message":"295","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":13},{"ruleId":"276","severity":1,"message":"296","line":10,"column":12,"nodeType":"278","messageId":"279","endLine":10,"endColumn":14},{"ruleId":"276","severity":1,"message":"297","line":10,"column":16,"nodeType":"278","messageId":"279","endLine":10,"endColumn":21},{"ruleId":"276","severity":1,"message":"313","line":3,"column":10,"nodeType":"278","messageId":"279","endLine":3,"endColumn":15},{"ruleId":"276","severity":1,"message":"314","line":11,"column":8,"nodeType":"278","messageId":"279","endLine":11,"endColumn":18},{"ruleId":"276","severity":1,"message":"315","line":12,"column":39,"nodeType":"278","messageId":"279","endLine":12,"endColumn":55},{"ruleId":"276","severity":1,"message":"316","line":15,"column":10,"nodeType":"278","messageId":"279","endLine":15,"endColumn":34},{"ruleId":"276","severity":1,"message":"285","line":19,"column":10,"nodeType":"278","messageId":"279","endLine":19,"endColumn":20},{"ruleId":"276","severity":1,"message":"286","line":19,"column":22,"nodeType":"278","messageId":"279","endLine":19,"endColumn":35},{"ruleId":"276","severity":1,"message":"317","line":20,"column":10,"nodeType":"278","messageId":"279","endLine":20,"endColumn":21},{"ruleId":"276","severity":1,"message":"318","line":20,"column":23,"nodeType":"278","messageId":"279","endLine":20,"endColumn":37},{"ruleId":"276","severity":1,"message":"319","line":21,"column":10,"nodeType":"278","messageId":"279","endLine":21,"endColumn":24},{"ruleId":"276","severity":1,"message":"320","line":21,"column":26,"nodeType":"278","messageId":"279","endLine":21,"endColumn":43},{"ruleId":"276","severity":1,"message":"321","line":22,"column":10,"nodeType":"278","messageId":"279","endLine":22,"endColumn":19},{"ruleId":"276","severity":1,"message":"322","line":22,"column":21,"nodeType":"278","messageId":"279","endLine":22,"endColumn":33},{"ruleId":"276","severity":1,"message":"323","line":23,"column":10,"nodeType":"278","messageId":"279","endLine":23,"endColumn":22},{"ruleId":"276","severity":1,"message":"324","line":23,"column":24,"nodeType":"278","messageId":"279","endLine":23,"endColumn":39},{"ruleId":"276","severity":1,"message":"325","line":31,"column":9,"nodeType":"278","messageId":"279","endLine":31,"endColumn":17},"no-unused-vars","'ShowRoleWiseComponent' is defined but never used.","Identifier","unusedVar","'UserComponent' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useCallback' is defined but never used.","'complaints' is assigned a value but never used.","'setComplaints' is assigned a value but never used.","'setData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useLocation' is defined but never used.","'useHistory' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getComplaints'. Either include it or remove the dependency array.","ArrayExpression",["326"],"React Hook useEffect has a missing dependency: 'addComplaintFormFields'. Either include it or remove the dependency array. You can also do a functional update 'setAddComplaintFormFields(a => ...)' if you only need 'addComplaintFormFields' in the 'setAddComplaintFormFields' call.",["327"],"'locationList' is assigned a value but never used.","'renderFormLink' is assigned a value but never used.","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression",["328"],"'addComplaints' is defined but never used.","'localUserId' is assigned a value but never used.","'toast' is defined but never used.","'PageLoader' is defined but never used.","'filterFormFields' is defined but never used.","'getAdminComplaintsReport' is defined but never used.","'complaintId' is assigned a value but never used.","'setComplaintId' is assigned a value but never used.","'commentMessage' is assigned a value but never used.","'setCommentMessage' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'filterParams' is assigned a value but never used.","'setFilterParams' is assigned a value but never used.","'navigate' is assigned a value but never used.",{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"kind":"333","justification":"334"},"Update the dependencies array to be: [getComplaints, userId]",{"range":"335","text":"336"},"Update the dependencies array to be: [addComplaintFormFields, localUserId, role]",{"range":"337","text":"338"},"directive","",[387,395],"[getComplaints, userId]",[1451,1470],"[addComplaintFormFields, localUserId, role]"]